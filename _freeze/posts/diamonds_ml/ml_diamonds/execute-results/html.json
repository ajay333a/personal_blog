{
  "hash": "bb7efe20038cdd6d9e183705a858c35f",
  "result": {
    "markdown": "---\ntitle: \"Predict Price of Diamonds\"\nauthor: \"Ajay Shankar A\"\ndate: \"2023-11-14\"\nformat: html\ncode-fold: false\ncategories: [Analysis, Code, EDA, Modeling]\n---\n\n\n## Predicting Diamonds Price\n\n### Introduction\n\nBuilding a model to **predict the price of the diamonds** using `tidymodels`.\n\n  Diamonds data set is readily available to use through the `ggplot2` library in the `tidyverse` and we will be using this data set predict the prices of the other diamonds.\n\nIn the data set various parameters of diamonds are given and each of these parameters may or may not effect the **price** of the diamonds.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndata(\"diamonds\")\ndiamonds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n```\n:::\n:::\n\nData has over 50,000 observations which is good for modeling.\n\n### Exploring the data\n\nThe diamonds data set is available to explore in `ggplot2` library as mentioned above.\n\nLet's check for NA's before exploring the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% map( ~sum(is.na(.))) %>% unlist()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  carat     cut   color clarity   depth   table   price       x       y       z \n      0       0       0       0       0       0       0       0       0       0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% ggplot(aes(carat)) + geom_freqpoly(binwidth = 0.05)\n```\n\n::: {.cell-output-display}\n![](ml_diamonds_files/figure-html/fig-price_hist-1.png){#fig-price_hist width=1200}\n:::\n:::\n\nFrom the @fig-price_hist we can observe that\n- Most of the diamonds are between 0.2 to 1.5 carats.\n- There are peaks which means higher number of diamonds at whole and common fractions.\n\nMy general knowledge is that the weight i.e, carat of the diamond influences the price most. Let's visualize that.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% ggplot(aes(carat, price)) + geom_hex(bins = 50)\n```\n\n::: {.cell-output-display}\n![](ml_diamonds_files/figure-html/price_vs_carat-1.png){width=1200}\n:::\n:::\n\n\nThe price tends to follow exponential curve the `log2()` curve, we can confirm this by another graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% filter(carat < 2.5) %>% \n  mutate(log_price = log2(price),\n                    log_carat = log2(carat)) %>% \n  ggplot(aes(log_carat, log_price)) + geom_hex(bins = 50)\n```\n\n::: {.cell-output-display}\n![](ml_diamonds_files/figure-html/fig-log_prc_vs_carat-1.png){#fig-log_prc_vs_carat width=1200}\n:::\n:::\n\n\nThe above @fig-log_prc_vs_carat shows that once we apply `log2()` to both price and carat the relationship mostly looks to be linear.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% filter(carat <= 2.5) %>% ggplot(aes(carat, price)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](ml_diamonds_files/figure-html/unnamed-chunk-1-1.png){width=1200}\n:::\n:::\n\n\nWe can see that `price` jumps when the weight is exactly or greater than to the whole and common fractions such as 0.5, 1.0, 1.5 and 2.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\nplot_parameter <- function(param){\n  ggplot(diamonds, aes({{param}}, price)) + geom_boxplot()\n}\n\n(plot_parameter(cut) + plot_parameter(color)) /\n  (plot_parameter(clarity))\n```\n\n::: {.cell-output-display}\n![](ml_diamonds_files/figure-html/exploring the data-1.png){width=1200}\n:::\n:::\n",
    "supporting": [
      "ml_diamonds_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}