library("tidyverse")
library("ggpubr")
library("GGally")
library(broom)
library("AICcmodavg")
library(modelr)
library(MASS)
library(plotly)

Thesisdata <- read_csv("F:/R Language/Thesisdata.csv")

# Naming, factoring of the data ----
ths_data <- Thesisdata
ths_data$Treatment <- as.factor(ths_data$Treatment)
ths_data$Treatment <- 
  factor(ths_data$Treatment,levels = c("Control",
                                       "Coconut water", 
                                       "IBA 1000ppm",
                          "IBA 100ppm + Coconut water"))
View(ths_data)


# Means and SD for Species and Treatments ----

ths_data_1 <- ths_data |> 
  summarise(avg_n_roots = mean(num_roots_n),
            SD_n_roots = sd(num_roots_n),
            avg_lng_root = mean(lng_long_root_cm),
            SD_lng_root = sd(lng_long_root_cm),
            avg_dia_root = mean(dia_long_root_mm),
            SD_dia_root = sd(dia_long_root_mm),
            .by = c(Species, Treatment)) |> 
  mutate(across(where(is.double), ~round(.x, digits = 3))) 

View(ths_data_1)

ths_nest <- ths_data |> group_by(Species) |> nest()

ths_nest
View(ths_nest)
ths_model <- function(df){
  lm(num_roots_n ~ Treatment, data = df)
}

ths_nest <- ths_nest %>% 
  mutate(model = map(data, ths_model))
ths_nest
ths_nest <- ths_nest %>% 
  mutate(
    resids = map2(data, model, add_residuals)
  )
ths_nest

resids <- unnest(ths_nest, resids)
glimpse(resids)

resids %>% ggplot(aes(num_roots_n, resid)) +
  geom_line(aes(group = Treatment), alpha = 1/3) +
  facet_wrap(~Species)

ths_data_2 <- split(ths_data_1, ths_data_1$Species)
class(ths_data_2)

ths_data_3 <- ths_data_1 |>
  select(-SD_n_roots, -SD_lng_root, -SD_dia_root) |>
  tidyr::pivot_longer(c(avg_n_roots, avg_lng_root, avg_dia_root),
                      names_to = "params")

ths_data_3$params <- as.factor(ths_data_3$params)
ths_data_3$params <- factor(ths_data_3$params, 
                            levels = c("avg_n_roots",
                                       "avg_lng_root",
                                       "avg_dia_root"))
str(ths_data_3)



# Graphs ----

ths_data %>% filter(Species == "Conidium verigatum") %>% 
  ggplot(aes(Treatment, num_roots_n, fill = Treatment))+
  geom_col() + stat_compare_means(method = "anova",
                                  label.x = "Control",
                                  label.y = 60)+
  theme_bw() + theme(legend.position = "bottom")

plot_3 <- ths_data %>% filter(Treatment != "Control") %>% 
  ggplot(aes(lng_long_root_cm, dia_long_root_mm,
                        color = Treatment))+
  geom_point()+ geom_smooth(method = "loess", se = FALSE)+
   theme_bw()+
  labs(x= "Length of longest root",
       y= "Diameter of Longest Root") +
  theme(legend.position = "bottom")
plot_3




ths_data |> filter(Treatment!= "Control") |> 
   ggpairs(columns = 3:5,
           columnLabels = c("Number of roots",
                            "Length of longest roots(cm)",
                            "Diameter of longest roots(mm)"),
           aes(color = Treatment, alpha = 0.5),
           upper = list(continuous = wrap("cor", size = 7)),
           lower = list(continuous = wrap("smooth", size = 3, alpha = 1)),
           diag = list(continuous = wrap("blankDiag"))
          ) + theme_bw()





ths_data_1 |> select(-SD_n_roots, -SD_lng_root, SD_dia_root) |> 
  ggplot(aes(x = Species, fill = Treatment),
                     position = "dodge") +
  geom_col(aes(y = avg_n_roots, fill = "avg_n_roots"),
           alpha = 0.3, position = "dodge") +
  geom_col(aes(y = avg_lng_root, fill = "avg_lng_root"),
           alpha = 0.3, position = "dodge")+
  geom_col(aes(y= avg_dia_root, fill = "avg_dia_root"),
           alpha = 0.3, position = "dodge") + 
  theme(legend.position = "bottom") + facet_wrap(~Treatment)


ths_data_1 |> 
  tidyr::pivot_longer(c(avg_n_roots, avg_lng_root,
                        avg_dia_root)) |> 
  ggplot(aes(x = Species, y = value, fill = name)) + 
  geom_col(alpha = 0.7, position = "dodge") + 
  facet_wrap(~Treatment, scales = "free_x", ncol = 2) + 
  theme_bw() +
 theme(legend.position = "bottom")


ths_data_3 |>  
  ggplot(aes(x = Species, y = value, fill = Treatment)) + 
  geom_col(alpha = 0.7, position = "dodge") + 
  facet_wrap(~params, scales = "free", ncol = 1,
             labeller = as_labeller(c(
               `avg_n_roots` = "Average number of roots per leaf",
               `avg_lng_root` = "Average leangth of longest root",
               `avg_dia_root` = "Average diameter of longest root"
             ))) + 
  theme_bw() +
  theme(legend.position = "bottom")

View(ths_data_1)
ths_data_1 |>   ggplot(aes(Treatment, avg_n_roots,
                         fill = Treatment)) +
  geom_col(position = "dodge") + facet_wrap(~Species, ncol = 2) +
  theme(legend.position = "bottom")

ths_data %>% ggplot(aes(lng_long_root_cm, dia_long_root_mm,
                        fill = Treatment)) +
  geom_contour()

library(palmerpenguins)

penguins %>% ggplot(aes(flipper_length_mm, body_mass_g,
                        color = species)) +
  geom_contour()

# ANOVA functions ----

ths_data_aov <- read.csv("F:/R Language/Thesisdata.csv",
                         header = TRUE,
                         colClasses = c("factor", "factor",
                                        "numeric",
                                        "numeric",
                                        "numeric"))

str(ths_data_aov)
summary(ths_data_aov)

one_way <- aov(num_roots_n ~ Treatment , data = ths_data_aov)
summary(one_way)

model1 <- lm(num_roots_n ~ Treatment + Species,
             data = ths_data_aov)
summary(model1)

two_way <- aov(num_roots_n ~ Treatment + Species , data = ths_data_aov)
summary(two_way)

interaction_two_way <- aov(num_roots_n ~ Treatment * Species , data = ths_data_aov)
summary(interaction_two_way)

unique(ths_data_aov$Species)
names(ths_data_aov)
View(ths_data_aov)

## one way ANOVA function ----
fun_aov_1 <- function(sps, param){
  
  ths_data_aov <-  ths_data_aov |> filter(Species == sps) |> 
    select(Species, Treatment, {{param}})
  
    n_one_way_aov <- rlang::inject(aov(!!enexpr(param) ~ Treatment,
                                     data = ths_data_aov))
  summary(n_one_way_aov)
  
}

fun_aov_2 <- function(sps, param){
  
  ths_data_aov <-  ths_data_aov |> filter(Species == sps) |> 
    select(Species, Treatment, {{param}})
  
  aov_f <- as.formula(paste(deparse(substitute(param)),
                            '~ Treatment'))
  n_one_way_aov <- do.call('aov', list(formula = aov_f,
                                       data  = ths_data_aov))
  summary(n_one_way_aov)
  
}


c <- fun_aov_1("Conidium verigatum",  lng_long_root_cm)
fun_aov_2("Conidium verigatum",  lng_long_root_cm)
class(c)

# Modeling the data set one-way ----
## Modeling the data set one-way Number of roots ----
ggplot(ths_data, aes(x = Treatment, y = num_roots_n,
                     color = num_roots_n)) +
  geom_point() + geom_jitter()

mod_ths <- lm(num_roots_n ~ Treatment, data = ths_data)

ths_grid <- ths_data |> data_grid(Treatment) |>
  add_predictions(mod_ths)

ggplot(ths_data, aes(Treatment)) +
  geom_point(aes(y = num_roots_n)) + 
  geom_point(data = ths_grid, aes(y = pred),
             color = "red", size = 4)

## Modeling data one way Root length ----
ggplot(ths_data, aes(x = Treatment, y = lng_long_root_cm,
                    color = lng_long_root_cm)) +
  geom_point() + geom_jitter()

mod_ths <- lm(lng_long_root_cm ~ Treatment, data = ths_data)

ths_grid <- ths_data |> data_grid(Treatment) |>
  add_predictions(mod_ths)

ggplot(ths_data, aes(Treatment)) +
  geom_point(aes(y = lng_long_root_cm)) + 
  geom_point(data = ths_grid, aes(y = pred),
             color = "red", size = 4)

## Modeling data one way Root diameter ----
ggplot(ths_data, aes(x = Treatment, y = dia_long_root_mm,
                     color = dia_long_root_mm)) +
  geom_point() + geom_jitter()

mod_ths <- lm(dia_long_root_mm ~ Treatment, data = ths_data)

ths_grid <- ths_data |> data_grid(Treatment) |>
  add_predictions(mod_ths)

ggplot(ths_data, aes(Treatment)) +
  geom_point(aes(y = dia_long_root_mm)) + 
  geom_point(data = ths_grid, aes(y = pred),
             color = "red", size = 4)

# Modeling data set two way set ----

ths_data |> ggplot(aes(lng_long_root_cm, dia_long_root_mm)) +
  geom_point(aes(color = Treatment))

mod_ths2 <- lm(dia_long_root_mm ~ lng_long_root_cm + Treatment,
               data = ths_data)
mod_ths3 <- lm(dia_long_root_mm ~ lng_long_root_cm * Treatment,
               data = ths_data)

ths_grid2 <- ths_data |> data_grid(lng_long_root_cm, Treatment) |> 
  gather_predictions(mod_ths2, mod_ths3)

ggplot(ths_data, aes(lng_long_root_cm, dia_long_root_mm, 
                     color = Treatment)) +
  geom_point() + 
  geom_line(data = ths_grid2, aes(y = pred)) + 
  facet_wrap(~model)

ths_data_grid <- ths_data |> 
  gather_residuals(mod_ths2, mod_ths3)

ggplot(ths_data_grid, aes(lng_long_root_cm, resid, 
                          color = Treatment)) + geom_point() + 
  facet_grid(model ~ Treatment)

# Modeling data set two way (2 - continuous variables) ----

mod_ths_4 <- lm(dia_long_root_mm ~ lng_long_root_cm + num_roots_n,
                data = ths_data)
mod_ths_5 <-  lm(dia_long_root_mm ~ lng_long_root_cm * num_roots_n,
                 data = ths_data)

grid <- ths_data |> 
  data_grid(
    lng_long_root_cm = seq_range(lng_long_root_cm, 5),
    num_roots_n = seq_range(num_roots_n, 5)
    ) |> 
  gather_predictions(mod_ths_4, mod_ths_5)

g <- ggplot(grid, aes(lng_long_root_cm, num_roots_n)) +
  geom_tile(aes(fill = pred)) + 
  facet_wrap(~ model)
plotly::ggplotly(g)

ggplot(grid, aes(lng_long_root_cm, pred,
                 colour = num_roots_n, group = num_roots_n)) + 
  geom_line() +
  facet_wrap(~ model)

ggplot(grid, aes(num_roots_n, pred,
                 colour = lng_long_root_cm, group = lng_long_root_cm)) + 
  geom_line() +
  facet_wrap(~ model)




